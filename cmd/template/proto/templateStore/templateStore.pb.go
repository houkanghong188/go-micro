// Code generated by protoc-gen-go. DO NOT EDIT.
// source: templateStore.proto

package templateStore

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Request struct {
	TemplateId           []string `protobuf:"bytes,1,rep,name=templateId,proto3" json:"templateId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Request) Reset()         { *m = Request{} }
func (m *Request) String() string { return proto.CompactTextString(m) }
func (*Request) ProtoMessage()    {}
func (*Request) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d47e821c79faf9f, []int{0}
}

func (m *Request) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Request.Unmarshal(m, b)
}
func (m *Request) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Request.Marshal(b, m, deterministic)
}
func (m *Request) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Request.Merge(m, src)
}
func (m *Request) XXX_Size() int {
	return xxx_messageInfo_Request.Size(m)
}
func (m *Request) XXX_DiscardUnknown() {
	xxx_messageInfo_Request.DiscardUnknown(m)
}

var xxx_messageInfo_Request proto.InternalMessageInfo

func (m *Request) GetTemplateId() []string {
	if m != nil {
		return m.TemplateId
	}
	return nil
}

type Response struct {
	Templates            []*Template `protobuf:"bytes,1,rep,name=templates,proto3" json:"templates,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Response) Reset()         { *m = Response{} }
func (m *Response) String() string { return proto.CompactTextString(m) }
func (*Response) ProtoMessage()    {}
func (*Response) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d47e821c79faf9f, []int{1}
}

func (m *Response) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Response.Unmarshal(m, b)
}
func (m *Response) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Response.Marshal(b, m, deterministic)
}
func (m *Response) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Response.Merge(m, src)
}
func (m *Response) XXX_Size() int {
	return xxx_messageInfo_Response.Size(m)
}
func (m *Response) XXX_DiscardUnknown() {
	xxx_messageInfo_Response.DiscardUnknown(m)
}

var xxx_messageInfo_Response proto.InternalMessageInfo

func (m *Response) GetTemplates() []*Template {
	if m != nil {
		return m.Templates
	}
	return nil
}

type Template struct {
	Id                   int32    `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	TemplateId           string   `protobuf:"bytes,2,opt,name=templateId,proto3" json:"templateId,omitempty"`
	DesignerId           int32    `protobuf:"varint,3,opt,name=designerId,proto3" json:"designerId,omitempty"`
	Price                int32    `protobuf:"varint,4,opt,name=price,proto3" json:"price,omitempty"`
	Version              int32    `protobuf:"varint,5,opt,name=version,proto3" json:"version,omitempty"`
	Star                 int32    `protobuf:"varint,6,opt,name=Star,proto3" json:"Star,omitempty"`
	Level                int32    `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`
	Sort                 int32    `protobuf:"varint,8,opt,name=sort,proto3" json:"sort,omitempty"`
	Status               string   `protobuf:"bytes,9,opt,name=status,proto3" json:"status,omitempty"`
	IsImgCaptured        int32    `protobuf:"varint,10,opt,name=isImgCaptured,proto3" json:"isImgCaptured,omitempty"`
	LatestCaptureTime    string   `protobuf:"bytes,11,opt,name=latestCaptureTime,proto3" json:"latestCaptureTime,omitempty"`
	Discount             int32    `protobuf:"varint,12,opt,name=discount,proto3" json:"discount,omitempty"`
	Corner               string   `protobuf:"bytes,13,opt,name=corner,proto3" json:"corner,omitempty"`
	SaleNumber           int32    `protobuf:"varint,14,opt,name=saleNumber,proto3" json:"saleNumber,omitempty"`
	ShowSaleNumber       int32    `protobuf:"varint,15,opt,name=showSaleNumber,proto3" json:"showSaleNumber,omitempty"`
	Pv                   int32    `protobuf:"varint,16,opt,name=pv,proto3" json:"pv,omitempty"`
	Uv                   int32    `protobuf:"varint,17,opt,name=uv,proto3" json:"uv,omitempty"`
	IsVipFree            int32    `protobuf:"varint,18,opt,name=isVipFree,proto3" json:"isVipFree,omitempty"`
	OnlineTime           string   `protobuf:"bytes,19,opt,name=onlineTime,proto3" json:"onlineTime,omitempty"`
	FirstOnlineTime      string   `protobuf:"bytes,20,opt,name=firstOnlineTime,proto3" json:"firstOnlineTime,omitempty"`
	IsDelete             int32    `protobuf:"varint,21,opt,name=isDelete,proto3" json:"isDelete,omitempty"`
	CreateTime           string   `protobuf:"bytes,22,opt,name=createTime,proto3" json:"createTime,omitempty"`
	UpdateTime           string   `protobuf:"bytes,23,opt,name=updateTime,proto3" json:"updateTime,omitempty"`
	Title                string   `protobuf:"bytes,24,opt,name=title,proto3" json:"title,omitempty"`
	Identity             int32    `protobuf:"varint,25,opt,name=identity,proto3" json:"identity,omitempty"`
	Category             int32    `protobuf:"varint,26,opt,name=category,proto3" json:"category,omitempty"`
	SecondaryCategory    int32    `protobuf:"varint,27,opt,name=secondaryCategory,proto3" json:"secondaryCategory,omitempty"`
	Scene                int32    `protobuf:"varint,28,opt,name=scene,proto3" json:"scene,omitempty"`
	SecondaryScene       int32    `protobuf:"varint,29,opt,name=secondaryScene,proto3" json:"secondaryScene,omitempty"`
	Industry             int32    `protobuf:"varint,30,opt,name=industry,proto3" json:"industry,omitempty"`
	SecondaryIndustry    int32    `protobuf:"varint,31,opt,name=secondaryIndustry,proto3" json:"secondaryIndustry,omitempty"`
	Style                int32    `protobuf:"varint,32,opt,name=style,proto3" json:"style,omitempty"`
	Color                int32    `protobuf:"varint,33,opt,name=color,proto3" json:"color,omitempty"`
	Size                 int32    `protobuf:"varint,34,opt,name=size,proto3" json:"size,omitempty"`
	CruxWords            string   `protobuf:"bytes,35,opt,name=cruxWords,proto3" json:"cruxWords,omitempty"`
	TemplateInfo         string   `protobuf:"bytes,36,opt,name=templateInfo,proto3" json:"templateInfo,omitempty"`
	TemplateProperty     string   `protobuf:"bytes,37,opt,name=templateProperty,proto3" json:"templateProperty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Template) Reset()         { *m = Template{} }
func (m *Template) String() string { return proto.CompactTextString(m) }
func (*Template) ProtoMessage()    {}
func (*Template) Descriptor() ([]byte, []int) {
	return fileDescriptor_3d47e821c79faf9f, []int{2}
}

func (m *Template) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Template.Unmarshal(m, b)
}
func (m *Template) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Template.Marshal(b, m, deterministic)
}
func (m *Template) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Template.Merge(m, src)
}
func (m *Template) XXX_Size() int {
	return xxx_messageInfo_Template.Size(m)
}
func (m *Template) XXX_DiscardUnknown() {
	xxx_messageInfo_Template.DiscardUnknown(m)
}

var xxx_messageInfo_Template proto.InternalMessageInfo

func (m *Template) GetId() int32 {
	if m != nil {
		return m.Id
	}
	return 0
}

func (m *Template) GetTemplateId() string {
	if m != nil {
		return m.TemplateId
	}
	return ""
}

func (m *Template) GetDesignerId() int32 {
	if m != nil {
		return m.DesignerId
	}
	return 0
}

func (m *Template) GetPrice() int32 {
	if m != nil {
		return m.Price
	}
	return 0
}

func (m *Template) GetVersion() int32 {
	if m != nil {
		return m.Version
	}
	return 0
}

func (m *Template) GetStar() int32 {
	if m != nil {
		return m.Star
	}
	return 0
}

func (m *Template) GetLevel() int32 {
	if m != nil {
		return m.Level
	}
	return 0
}

func (m *Template) GetSort() int32 {
	if m != nil {
		return m.Sort
	}
	return 0
}

func (m *Template) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *Template) GetIsImgCaptured() int32 {
	if m != nil {
		return m.IsImgCaptured
	}
	return 0
}

func (m *Template) GetLatestCaptureTime() string {
	if m != nil {
		return m.LatestCaptureTime
	}
	return ""
}

func (m *Template) GetDiscount() int32 {
	if m != nil {
		return m.Discount
	}
	return 0
}

func (m *Template) GetCorner() string {
	if m != nil {
		return m.Corner
	}
	return ""
}

func (m *Template) GetSaleNumber() int32 {
	if m != nil {
		return m.SaleNumber
	}
	return 0
}

func (m *Template) GetShowSaleNumber() int32 {
	if m != nil {
		return m.ShowSaleNumber
	}
	return 0
}

func (m *Template) GetPv() int32 {
	if m != nil {
		return m.Pv
	}
	return 0
}

func (m *Template) GetUv() int32 {
	if m != nil {
		return m.Uv
	}
	return 0
}

func (m *Template) GetIsVipFree() int32 {
	if m != nil {
		return m.IsVipFree
	}
	return 0
}

func (m *Template) GetOnlineTime() string {
	if m != nil {
		return m.OnlineTime
	}
	return ""
}

func (m *Template) GetFirstOnlineTime() string {
	if m != nil {
		return m.FirstOnlineTime
	}
	return ""
}

func (m *Template) GetIsDelete() int32 {
	if m != nil {
		return m.IsDelete
	}
	return 0
}

func (m *Template) GetCreateTime() string {
	if m != nil {
		return m.CreateTime
	}
	return ""
}

func (m *Template) GetUpdateTime() string {
	if m != nil {
		return m.UpdateTime
	}
	return ""
}

func (m *Template) GetTitle() string {
	if m != nil {
		return m.Title
	}
	return ""
}

func (m *Template) GetIdentity() int32 {
	if m != nil {
		return m.Identity
	}
	return 0
}

func (m *Template) GetCategory() int32 {
	if m != nil {
		return m.Category
	}
	return 0
}

func (m *Template) GetSecondaryCategory() int32 {
	if m != nil {
		return m.SecondaryCategory
	}
	return 0
}

func (m *Template) GetScene() int32 {
	if m != nil {
		return m.Scene
	}
	return 0
}

func (m *Template) GetSecondaryScene() int32 {
	if m != nil {
		return m.SecondaryScene
	}
	return 0
}

func (m *Template) GetIndustry() int32 {
	if m != nil {
		return m.Industry
	}
	return 0
}

func (m *Template) GetSecondaryIndustry() int32 {
	if m != nil {
		return m.SecondaryIndustry
	}
	return 0
}

func (m *Template) GetStyle() int32 {
	if m != nil {
		return m.Style
	}
	return 0
}

func (m *Template) GetColor() int32 {
	if m != nil {
		return m.Color
	}
	return 0
}

func (m *Template) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *Template) GetCruxWords() string {
	if m != nil {
		return m.CruxWords
	}
	return ""
}

func (m *Template) GetTemplateInfo() string {
	if m != nil {
		return m.TemplateInfo
	}
	return ""
}

func (m *Template) GetTemplateProperty() string {
	if m != nil {
		return m.TemplateProperty
	}
	return ""
}

func init() {
	proto.RegisterType((*Request)(nil), "templateStore.Request")
	proto.RegisterType((*Response)(nil), "templateStore.Response")
	proto.RegisterType((*Template)(nil), "templateStore.Template")
}

func init() { proto.RegisterFile("templateStore.proto", fileDescriptor_3d47e821c79faf9f) }

var fileDescriptor_3d47e821c79faf9f = []byte{
	// 613 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x94, 0x5d, 0x6f, 0xd3, 0x3e,
	0x14, 0xc6, 0xb5, 0x97, 0x6e, 0xad, 0xf7, 0xee, 0xed, 0xbf, 0x9d, 0xff, 0x18, 0x63, 0x94, 0x81,
	0x0a, 0x42, 0xbb, 0x18, 0x42, 0xe2, 0x16, 0x0d, 0x21, 0xf5, 0x06, 0xa6, 0xb6, 0x82, 0xeb, 0x2c,
	0x3e, 0x2b, 0x96, 0x52, 0x3b, 0xd8, 0x4e, 0x58, 0xf6, 0x01, 0xf9, 0x5c, 0xc8, 0xc7, 0xf1, 0xd2,
	0xb4, 0x77, 0x79, 0x7e, 0xcf, 0x13, 0x9f, 0x13, 0x9f, 0xd8, 0xec, 0xd0, 0xe1, 0x2c, 0xcf, 0x12,
	0x87, 0x63, 0xa7, 0x0d, 0x5e, 0xe5, 0x46, 0x3b, 0xcd, 0x77, 0x5a, 0xb0, 0xff, 0x96, 0x6d, 0x8e,
	0xf0, 0x77, 0x81, 0xd6, 0xf1, 0x73, 0xc6, 0xa2, 0x37, 0x14, 0xb0, 0x72, 0xb1, 0x36, 0xe8, 0x8d,
	0xe6, 0x48, 0xff, 0x33, 0xeb, 0x8e, 0xd0, 0xe6, 0x5a, 0x59, 0xe4, 0x1f, 0x59, 0x2f, 0x3a, 0x96,
	0xa2, 0x5b, 0xd7, 0x27, 0x57, 0xed, 0x72, 0x93, 0x5a, 0x8d, 0x9a, 0x64, 0xff, 0x6f, 0x97, 0x75,
	0x23, 0xe7, 0xbb, 0x6c, 0x55, 0xfa, 0x3a, 0x2b, 0x83, 0xce, 0x68, 0x55, 0x8a, 0x85, 0xfa, 0xab,
	0x17, 0x2b, 0xed, 0xfa, 0xde, 0x17, 0x68, 0xe5, 0x54, 0xa1, 0x19, 0x0a, 0x58, 0xa3, 0xf7, 0xe6,
	0x08, 0x3f, 0x62, 0x9d, 0xdc, 0xc8, 0x14, 0x61, 0x9d, 0xac, 0x20, 0x38, 0xb0, 0xcd, 0x12, 0x8d,
	0x95, 0x5a, 0x41, 0x87, 0x78, 0x94, 0x9c, 0xb3, 0xf5, 0xb1, 0x4b, 0x0c, 0x6c, 0x10, 0xa6, 0x67,
	0xbf, 0x46, 0x86, 0x25, 0x66, 0xb0, 0x19, 0xd6, 0x20, 0xe1, 0x93, 0x56, 0x1b, 0x07, 0xdd, 0x90,
	0xf4, 0xcf, 0xfc, 0x98, 0x6d, 0x58, 0x97, 0xb8, 0xc2, 0x42, 0x8f, 0x3a, 0xad, 0x15, 0xbf, 0x64,
	0x3b, 0xd2, 0x0e, 0x67, 0xd3, 0x9b, 0x24, 0x77, 0x85, 0x41, 0x01, 0x8c, 0x5e, 0x6a, 0x43, 0xfe,
	0x9e, 0x1d, 0xd0, 0x8e, 0xb8, 0x9a, 0x4c, 0xe4, 0x0c, 0x61, 0x8b, 0x16, 0x5a, 0x36, 0xf8, 0x29,
	0xeb, 0x0a, 0x69, 0x53, 0x5d, 0x28, 0x07, 0xdb, 0xb4, 0xdc, 0x93, 0xf6, 0x7d, 0xa4, 0xda, 0x28,
	0x34, 0xb0, 0x13, 0xfa, 0x08, 0xca, 0xef, 0x96, 0x4d, 0x32, 0xfc, 0x56, 0xcc, 0xee, 0xd0, 0xc0,
	0x6e, 0xd8, 0xad, 0x86, 0xf0, 0x37, 0x6c, 0xd7, 0xfe, 0xd2, 0x7f, 0xc6, 0x4d, 0x66, 0x8f, 0x32,
	0x0b, 0xd4, 0x4f, 0x29, 0x2f, 0x61, 0x3f, 0x4c, 0x29, 0x2f, 0xbd, 0x2e, 0x4a, 0x38, 0x08, 0xba,
	0x28, 0xf9, 0x19, 0xeb, 0x49, 0xfb, 0x43, 0xe6, 0x5f, 0x0d, 0x22, 0x70, 0xc2, 0x0d, 0xf0, 0x5d,
	0x68, 0x95, 0x49, 0x15, 0x3e, 0xf0, 0x30, 0xcc, 0xb4, 0x21, 0x7c, 0xc0, 0xf6, 0xee, 0xa5, 0xb1,
	0xee, 0x7b, 0x13, 0x3a, 0xa2, 0xd0, 0x22, 0xf6, 0x7b, 0x20, 0xed, 0x17, 0xcc, 0xd0, 0x21, 0xfc,
	0x17, 0xf6, 0x20, 0x6a, 0x5f, 0x25, 0x35, 0x98, 0xb8, 0xb0, 0xc0, 0x71, 0xa8, 0xd2, 0x10, 0xef,
	0x17, 0xb9, 0x88, 0xfe, 0x49, 0xf0, 0x1b, 0xe2, 0xa7, 0xee, 0xa4, 0xcb, 0x10, 0x80, 0xac, 0x20,
	0xa8, 0xa2, 0x40, 0xe5, 0xa4, 0xab, 0xe0, 0xff, 0xba, 0x62, 0xad, 0xbd, 0x97, 0x26, 0x0e, 0xa7,
	0xda, 0x54, 0x70, 0x1a, 0xbc, 0xa8, 0xfd, 0x6c, 0x2d, 0xa6, 0x5a, 0x89, 0xc4, 0x54, 0x37, 0x31,
	0xf4, 0x8c, 0x42, 0xcb, 0x86, 0xaf, 0x6d, 0x53, 0x54, 0x08, 0x67, 0xe1, 0x8f, 0x23, 0x41, 0xd3,
	0x89, 0xd1, 0x31, 0xd9, 0xcf, 0xeb, 0xe9, 0xb4, 0x28, 0xf5, 0xa8, 0x44, 0x61, 0x9d, 0xa9, 0xe0,
	0xbc, 0xee, 0xb1, 0xd6, 0xad, 0x3e, 0x86, 0x31, 0xf4, 0x62, 0xa1, 0x8f, 0x68, 0x50, 0x1f, 0xae,
	0xca, 0x10, 0x2e, 0xea, 0x3e, 0xbc, 0xf0, 0x34, 0xd5, 0x99, 0x36, 0xf0, 0x32, 0x50, 0x12, 0x74,
	0x1e, 0xe4, 0x23, 0x42, 0xbf, 0x3e, 0x0f, 0xf2, 0x11, 0xfd, 0x7f, 0x90, 0x9a, 0xe2, 0xe1, 0xa7,
	0x36, 0xc2, 0xc2, 0x2b, 0xda, 0xc7, 0x06, 0xf0, 0x3e, 0xdb, 0x7e, 0x3a, 0xc9, 0xea, 0x5e, 0xc3,
	0x25, 0x05, 0x5a, 0x8c, 0xbf, 0x63, 0xfb, 0x51, 0xdf, 0x1a, 0x9d, 0xa3, 0x71, 0x15, 0xbc, 0xa6,
	0xdc, 0x12, 0xbf, 0xbe, 0x65, 0x47, 0x93, 0xf9, 0xdb, 0x66, 0x8c, 0xa6, 0xf4, 0xa7, 0xfd, 0x13,
	0xeb, 0x0c, 0x95, 0xc0, 0x07, 0x7e, 0xbc, 0x70, 0x1b, 0xd5, 0x97, 0xdc, 0xe9, 0xc9, 0x12, 0x0f,
	0x37, 0xda, 0xdd, 0x06, 0x5d, 0x8f, 0x1f, 0xfe, 0x05, 0x00, 0x00, 0xff, 0xff, 0x5e, 0x68, 0x94,
	0xeb, 0x35, 0x05, 0x00, 0x00,
}
